// @generated by protoc-gen-es v1.6.0 with parameter "target=ts"
// @generated from file core/authentication/basic/v1/service.proto (package core.authentication.basic.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * Valid keys for looking up an entity
 *
 * @generated from enum core.authentication.basic.v1.LookupEntityKeys
 */
export enum LookupEntityKeys {
  /**
   * @generated from enum value: LOOKUP_ENTITY_KEY_UNSPECIFIED = 0;
   */
  LOOKUP_ENTITY_KEY_UNSPECIFIED = 0,

  /**
   * @generated from enum value: LOOKUP_ENTITY_KEY_ID = 1;
   */
  LOOKUP_ENTITY_KEY_ID = 1,

  /**
   * @generated from enum value: LOOKUP_ENTITY_KEY_USERNAME = 2;
   */
  LOOKUP_ENTITY_KEY_USERNAME = 2,

  /**
   * @generated from enum value: LOOKUP_ENTITY_KEY_EMAIL = 3;
   */
  LOOKUP_ENTITY_KEY_EMAIL = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(LookupEntityKeys)
proto3.util.setEnumType(LookupEntityKeys, "core.authentication.basic.v1.LookupEntityKeys", [
  { no: 0, name: "LOOKUP_ENTITY_KEY_UNSPECIFIED" },
  { no: 1, name: "LOOKUP_ENTITY_KEY_ID" },
  { no: 2, name: "LOOKUP_ENTITY_KEY_USERNAME" },
  { no: 3, name: "LOOKUP_ENTITY_KEY_EMAIL" },
]);

/**
 * Entity the basic representation of a user or actor operating in the system with fields for
 * ID, username, password, email, and timestamps for creation and updates of the Entity values.
 * A combination of these fields uniquely identifies an entity within the system and allows for authentication.
 *
 * @generated from message core.authentication.basic.v1.Entity
 */
export class Entity extends Message<Entity> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string username = 2;
   */
  username = "";

  /**
   * @generated from field: string password = 3;
   */
  password = "";

  /**
   * @generated from field: string email = 4;
   */
  email = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 6;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Entity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "core.authentication.basic.v1.Entity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "updated_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Entity {
    return new Entity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Entity {
    return new Entity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Entity {
    return new Entity().fromJsonString(jsonString, options);
  }

  static equals(a: Entity | PlainMessage<Entity> | undefined, b: Entity | PlainMessage<Entity> | undefined): boolean {
    return proto3.util.equals(Entity, a, b);
  }
}

/**
 * Session is time bound authentication token that is issued to a user upon successful login. It contains
 * the user ID, a unique token, and timestamps for when the session was created and when it expires.
 * The token is used to authenticate the user in subsequent requests, allowing them to access protected resources
 * without needing to re-enter their credentials.
 *
 * @generated from message core.authentication.basic.v1.Session
 */
export class Session extends Message<Session> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  /**
   * @generated from field: string token = 3;
   */
  token = "";

  /**
   * @generated from field: string refresh_token = 4;
   */
  refreshToken = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expires_at = 6;
   */
  expiresAt?: Timestamp;

  constructor(data?: PartialMessage<Session>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "core.authentication.basic.v1.Session";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "expires_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Session {
    return new Session().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Session {
    return new Session().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Session {
    return new Session().fromJsonString(jsonString, options);
  }

  static equals(a: Session | PlainMessage<Session> | undefined, b: Session | PlainMessage<Session> | undefined): boolean {
    return proto3.util.equals(Session, a, b);
  }
}

