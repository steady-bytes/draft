// @generated by protoc-gen-es v1.6.0 with parameter "target=js"
// @generated from file core/authentication/basic/v1/service.proto (package core.authentication.basic.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * Valid keys for looking up an entity
 *
 * @generated from enum core.authentication.basic.v1.LookupEntityKeys
 */
export const LookupEntityKeys = proto3.makeEnum(
  "core.authentication.basic.v1.LookupEntityKeys",
  [
    {no: 0, name: "LOOKUP_ENTITY_KEY_UNSPECIFIED"},
    {no: 1, name: "LOOKUP_ENTITY_KEY_ID"},
    {no: 2, name: "LOOKUP_ENTITY_KEY_USERNAME"},
    {no: 3, name: "LOOKUP_ENTITY_KEY_EMAIL"},
  ],
);

/**
 * Entity the basic representation of a user or actor operating in the system with fields for
 * ID, username, password, email, and timestamps for creation and updates of the Entity values.
 * A combination of these fields uniquely identifies an entity within the system and allows for authentication.
 *
 * @generated from message core.authentication.basic.v1.Entity
 */
export const Entity = proto3.makeMessageType(
  "core.authentication.basic.v1.Entity",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "updated_at", kind: "message", T: Timestamp },
  ],
);

/**
 * Session is time bound authentication token that is issued to a user upon successful login. It contains
 * the user ID, a unique token, and timestamps for when the session was created and when it expires.
 * The token is used to authenticate the user in subsequent requests, allowing them to access protected resources
 * without needing to re-enter their credentials.
 *
 * @generated from message core.authentication.basic.v1.Session
 */
export const Session = proto3.makeMessageType(
  "core.authentication.basic.v1.Session",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "expires_at", kind: "message", T: Timestamp },
  ],
);

