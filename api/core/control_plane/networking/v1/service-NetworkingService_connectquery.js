// @generated by protoc-gen-connect-query v1.1.3 with parameter "target=js"
// @generated from file core/control_plane/networking/v1/service.proto (package core.control_plane.networking.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { AddRouteRequest, AddRouteResponse, DeleteRouteRequest, DeleteRouteResponse, ListRoutesRequest, ListRoutesResponse } from "./service_pb.js";

/**
 * Add route exposing an endpoint on the gateway and routing traffic to the correct process
 *
 * @generated from rpc core.control_plane.networking.v1.NetworkingService.AddRoute
 */
export const addRoute = {
  localName: "addRoute",
  name: "AddRoute",
  kind: MethodKind.Unary,
  I: AddRouteRequest,
  O: AddRouteResponse,
  service: {
    typeName: "core.control_plane.networking.v1.NetworkingService"
  }
};

/**
 * List all routes in the networking configuration
 *
 * @generated from rpc core.control_plane.networking.v1.NetworkingService.ListRoutes
 */
export const listRoutes = {
  localName: "listRoutes",
  name: "ListRoutes",
  kind: MethodKind.Unary,
  I: ListRoutesRequest,
  O: ListRoutesResponse,
  service: {
    typeName: "core.control_plane.networking.v1.NetworkingService"
  }
};

/**
 * Delete a route from the networking configuration, requires the name of the route
 * and returns a response code to indicate the success of the operation
 *
 * @generated from rpc core.control_plane.networking.v1.NetworkingService.DeleteRoute
 */
export const deleteRoute = {
  localName: "deleteRoute",
  name: "DeleteRoute",
  kind: MethodKind.Unary,
  I: DeleteRouteRequest,
  O: DeleteRouteResponse,
  service: {
    typeName: "core.control_plane.networking.v1.NetworkingService"
  }
};
